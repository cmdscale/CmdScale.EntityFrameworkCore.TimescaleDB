// <auto-generated />
using System;
using CmdScale.EntityFrameworkCore.TimescaleDB.Example.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CmdScale.EntityFrameworkCore.TimescaleDB.Example.DataAccess.Migrations
{
    [DbContext(typeof(TimescaleContext))]
    [Migration("20250821133041_TestMigration")]
    partial class TestMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CmdScale.EntityFrameworkCore.TimescaleDB.Example.DataAccess.Models.DeviceReading", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Power")
                        .HasColumnType("double precision");

                    b.Property<double>("Voltage")
                        .HasColumnType("double precision");

                    b.HasKey("Id", "Time");

                    b.ToTable("DeviceReadings");

                    b
                        .HasAnnotation("TimescaleDB:IsHypertable", true)
                        .HasAnnotation("TimescaleDB:TimeColumnName", "Time");
                });

            modelBuilder.Entity("CmdScale.EntityFrameworkCore.TimescaleDB.Example.DataAccess.Models.WeatherData", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Humidity")
                        .HasColumnType("double precision");

                    b.Property<double>("Temperature")
                        .HasColumnType("double precision");

                    b.HasKey("Id", "Time");

                    b.ToTable("WeatherData");

                    b
                        .HasAnnotation("TimescaleDB:IsHypertable", true)
                        .HasAnnotation("TimescaleDB:TimeColumnName", "Time");
                });
#pragma warning restore 612, 618
        }
    }
}
